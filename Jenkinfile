pipeline {
    agent any
    tools {
        jdk 'JAVA'
        maven 'Maven3'
    }
    environment {
        SONARQUBE_SERVER_URL = 'http://localhost:9000'
        SONARQUBE_PROJECT_KEY = 'My_Project_key'
        DOCKER_IMAGE = 'java_project'
        TRIVY_CACHE = "C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Minor Project\\trivy-cache"
        WORKSPACE_DIR = "C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\Minor Project"
        REPORT_FILE = 'trivy-report.json'
        PDF_FILE = 'trivy-report.pdf'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', 
                          branches: [[name: '*/main']], 
                          userRemoteConfigs: [[url: 'https://github.com/rohitjaiswalrj32/Java-Project.git']]
                ])
            }
        }

        stage('Build') {
            steps {
                bat 'mvn clean compile install'
            }
        }

        stage('SonarQube Analysis') {
            steps {
               withSonarQubeEnv('SonarQube_Server') {
                    bat '''
                       mvn clean verify sonar:sonar \
                          -Dsonar.projectKey=My_Project_key \
                          -Dsonar.projectName='Security_Pipeline' \
                          -Dsonar.host.url=http://localhost:9000 \
                          -Dsonar.token=sqp_b45303a7db203b6ae2833729523f51fd66bbf304
                    '''
                }
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE}:${env.BUILD_NUMBER}")
                }
            }
        }

        stage('Trivy Scan') {
            steps {
                script {
                    bat '''
                        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v C:/ProgramData/Jenkins/.jenkins/workspace/java-sonar:/root/.cache/ -v C:/ProgramData/Jenkins/.jenkins/workspace/trivy-db:/root/.trivy aquasec/trivy image --scanners vuln --format json -o C:/ProgramData/Jenkins/.jenkins/workspace/java-sonar/trivy-report.json %DOCKER_IMAGE%:%BUILD_NUMBER%
                    '''
                }
            }
        }

        stage('Generate PDF Report') {
            steps {
                script {
                    bat '''
                        type ${env.REPORT_FILE} | jq '.' | pandoc -o ${env.PDF_FILE}
                    '''
                }
            }
        }
    }
}
